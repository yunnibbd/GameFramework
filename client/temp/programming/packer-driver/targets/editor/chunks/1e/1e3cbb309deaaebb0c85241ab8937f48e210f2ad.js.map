{"version":3,"sources":["file:///E:/code/cocos/zhl/GameFramework/assets/Scrpts/Untitle.ts"],"names":["encodeHead","message","bb","popByteBuffer","_encodeHead","toUint8Array","$begin","begin","undefined","writeVarint32","writeVarint64","intToLong","$end","end","decodeHead","binary","_decodeHead","wrapByteBuffer","end_of_message","isAtEnd","tag","readVarint32","skipUnknownField","pushTemporaryLength","length","limit","offset","type","readByte","skip","Error","stringToLong","value","low","charCodeAt","high","unsigned","longToString","String","fromCharCode","bbStack","pop","bytes","Uint8Array","pushByteBuffer","push","subarray","grow","count","finalOffset","newBytes","set","advance","readBytes","writeBytes","buffer","readString","invalid","text","i","c1","c2","c3","c4","c","writeString","n","byteCount","writeByteBuffer","from","to","writeByte","readFloat","f32_u8","f32","writeFloat","readDouble","f64_u8","f64","writeDouble","readInt32","writeInt32","readInt64","writeInt64","b","readVarint64","part0","part1","part2","size","readVarint32ZigZag","writeVarint32ZigZag","readVarint64ZigZag","flip","writeVarint64ZigZag","Float32Array","Float64Array"],"mappings":"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","sourcesContent":["export interface Head {\n  begin?: number;\n  end?: number;\n}\n\nexport function encodeHead(message: Head): Uint8Array {\n  let bb = popByteBuffer();\n  _encodeHead(message, bb);\n  return toUint8Array(bb);\n}\n\nfunction _encodeHead(message: Head, bb: ByteBuffer): void {\n  // optional int32 begin = 1;\n  let $begin = message.begin;\n  if ($begin !== undefined) {\n    writeVarint32(bb, 8);\n    writeVarint64(bb, intToLong($begin));\n  }\n\n  // optional int32 end = 2;\n  let $end = message.end;\n  if ($end !== undefined) {\n    writeVarint32(bb, 16);\n    writeVarint64(bb, intToLong($end));\n  }\n}\n\nexport function decodeHead(binary: Uint8Array): Head {\n  return _decodeHead(wrapByteBuffer(binary));\n}\n\nfunction _decodeHead(bb: ByteBuffer): Head {\n  let message: Head = {} as any;\n\n  end_of_message: while (!isAtEnd(bb)) {\n    let tag = readVarint32(bb);\n\n    switch (tag >>> 3) {\n      case 0:\n        break end_of_message;\n\n      // optional int32 begin = 1;\n      case 1: {\n        message.begin = readVarint32(bb);\n        break;\n      }\n\n      // optional int32 end = 2;\n      case 2: {\n        message.end = readVarint32(bb);\n        break;\n      }\n\n      default:\n        skipUnknownField(bb, tag & 7);\n    }\n  }\n\n  return message;\n}\n\nexport interface Long {\n  low: number;\n  high: number;\n  unsigned: boolean;\n}\n\ninterface ByteBuffer {\n  bytes: Uint8Array;\n  offset: number;\n  limit: number;\n}\n\nfunction pushTemporaryLength(bb: ByteBuffer): number {\n  let length = readVarint32(bb);\n  let limit = bb.limit;\n  bb.limit = bb.offset + length;\n  return limit;\n}\n\nfunction skipUnknownField(bb: ByteBuffer, type: number): void {\n  switch (type) {\n    case 0: while (readByte(bb) & 0x80) { } break;\n    case 2: skip(bb, readVarint32(bb)); break;\n    case 5: skip(bb, 4); break;\n    case 1: skip(bb, 8); break;\n    default: throw new Error(\"Unimplemented type: \" + type);\n  }\n}\n\nfunction stringToLong(value: string): Long {\n  return {\n    low: value.charCodeAt(0) | (value.charCodeAt(1) << 16),\n    high: value.charCodeAt(2) | (value.charCodeAt(3) << 16),\n    unsigned: false,\n  };\n}\n\nfunction longToString(value: Long): string {\n  let low = value.low;\n  let high = value.high;\n  return String.fromCharCode(\n    low & 0xFFFF,\n    low >>> 16,\n    high & 0xFFFF,\n    high >>> 16);\n}\n\n// The code below was modified from https://github.com/protobufjs/bytebuffer.js\n// which is under the Apache License 2.0.\n\nlet f32 = new Float32Array(1);\nlet f32_u8 = new Uint8Array(f32.buffer);\n\nlet f64 = new Float64Array(1);\nlet f64_u8 = new Uint8Array(f64.buffer);\n\nfunction intToLong(value: number): Long {\n  value |= 0;\n  return {\n    low: value,\n    high: value >> 31,\n    unsigned: value >= 0,\n  };\n}\n\nlet bbStack: ByteBuffer[] = [];\n\nfunction popByteBuffer(): ByteBuffer {\n  const bb = bbStack.pop();\n  if (!bb) return { bytes: new Uint8Array(64), offset: 0, limit: 0 };\n  bb.offset = bb.limit = 0;\n  return bb;\n}\n\nfunction pushByteBuffer(bb: ByteBuffer): void {\n  bbStack.push(bb);\n}\n\nfunction wrapByteBuffer(bytes: Uint8Array): ByteBuffer {\n  return { bytes, offset: 0, limit: bytes.length };\n}\n\nfunction toUint8Array(bb: ByteBuffer): Uint8Array {\n  let bytes = bb.bytes;\n  let limit = bb.limit;\n  return bytes.length === limit ? bytes : bytes.subarray(0, limit);\n}\n\nfunction skip(bb: ByteBuffer, offset: number): void {\n  if (bb.offset + offset > bb.limit) {\n    throw new Error('Skip past limit');\n  }\n  bb.offset += offset;\n}\n\nfunction isAtEnd(bb: ByteBuffer): boolean {\n  return bb.offset >= bb.limit;\n}\n\nfunction grow(bb: ByteBuffer, count: number): number {\n  let bytes = bb.bytes;\n  let offset = bb.offset;\n  let limit = bb.limit;\n  let finalOffset = offset + count;\n  if (finalOffset > bytes.length) {\n    let newBytes = new Uint8Array(finalOffset * 2);\n    newBytes.set(bytes);\n    bb.bytes = newBytes;\n  }\n  bb.offset = finalOffset;\n  if (finalOffset > limit) {\n    bb.limit = finalOffset;\n  }\n  return offset;\n}\n\nfunction advance(bb: ByteBuffer, count: number): number {\n  let offset = bb.offset;\n  if (offset + count > bb.limit) {\n    throw new Error('Read past limit');\n  }\n  bb.offset += count;\n  return offset;\n}\n\nfunction readBytes(bb: ByteBuffer, count: number): Uint8Array {\n  let offset = advance(bb, count);\n  return bb.bytes.subarray(offset, offset + count);\n}\n\nfunction writeBytes(bb: ByteBuffer, buffer: Uint8Array): void {\n  let offset = grow(bb, buffer.length);\n  bb.bytes.set(buffer, offset);\n}\n\nfunction readString(bb: ByteBuffer, count: number): string {\n  // Sadly a hand-coded UTF8 decoder is much faster than subarray+TextDecoder in V8\n  let offset = advance(bb, count);\n  let fromCharCode = String.fromCharCode;\n  let bytes = bb.bytes;\n  let invalid = '\\uFFFD';\n  let text = '';\n\n  for (let i = 0; i < count; i++) {\n    let c1 = bytes[i + offset], c2: number, c3: number, c4: number, c: number;\n\n    // 1 byte\n    if ((c1 & 0x80) === 0) {\n      text += fromCharCode(c1);\n    }\n\n    // 2 bytes\n    else if ((c1 & 0xE0) === 0xC0) {\n      if (i + 1 >= count) text += invalid;\n      else {\n        c2 = bytes[i + offset + 1];\n        if ((c2 & 0xC0) !== 0x80) text += invalid;\n        else {\n          c = ((c1 & 0x1F) << 6) | (c2 & 0x3F);\n          if (c < 0x80) text += invalid;\n          else {\n            text += fromCharCode(c);\n            i++;\n          }\n        }\n      }\n    }\n\n    // 3 bytes\n    else if ((c1 & 0xF0) == 0xE0) {\n      if (i + 2 >= count) text += invalid;\n      else {\n        c2 = bytes[i + offset + 1];\n        c3 = bytes[i + offset + 2];\n        if (((c2 | (c3 << 8)) & 0xC0C0) !== 0x8080) text += invalid;\n        else {\n          c = ((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6) | (c3 & 0x3F);\n          if (c < 0x0800 || (c >= 0xD800 && c <= 0xDFFF)) text += invalid;\n          else {\n            text += fromCharCode(c);\n            i += 2;\n          }\n        }\n      }\n    }\n\n    // 4 bytes\n    else if ((c1 & 0xF8) == 0xF0) {\n      if (i + 3 >= count) text += invalid;\n      else {\n        c2 = bytes[i + offset + 1];\n        c3 = bytes[i + offset + 2];\n        c4 = bytes[i + offset + 3];\n        if (((c2 | (c3 << 8) | (c4 << 16)) & 0xC0C0C0) !== 0x808080) text += invalid;\n        else {\n          c = ((c1 & 0x07) << 0x12) | ((c2 & 0x3F) << 0x0C) | ((c3 & 0x3F) << 0x06) | (c4 & 0x3F);\n          if (c < 0x10000 || c > 0x10FFFF) text += invalid;\n          else {\n            c -= 0x10000;\n            text += fromCharCode((c >> 10) + 0xD800, (c & 0x3FF) + 0xDC00);\n            i += 3;\n          }\n        }\n      }\n    }\n\n    else text += invalid;\n  }\n\n  return text;\n}\n\nfunction writeString(bb: ByteBuffer, text: string): void {\n  // Sadly a hand-coded UTF8 encoder is much faster than TextEncoder+set in V8\n  let n = text.length;\n  let byteCount = 0;\n\n  // Write the byte count first\n  for (let i = 0; i < n; i++) {\n    let c = text.charCodeAt(i);\n    if (c >= 0xD800 && c <= 0xDBFF && i + 1 < n) {\n      c = (c << 10) + text.charCodeAt(++i) - 0x35FDC00;\n    }\n    byteCount += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n  writeVarint32(bb, byteCount);\n\n  let offset = grow(bb, byteCount);\n  let bytes = bb.bytes;\n\n  // Then write the bytes\n  for (let i = 0; i < n; i++) {\n    let c = text.charCodeAt(i);\n    if (c >= 0xD800 && c <= 0xDBFF && i + 1 < n) {\n      c = (c << 10) + text.charCodeAt(++i) - 0x35FDC00;\n    }\n    if (c < 0x80) {\n      bytes[offset++] = c;\n    } else {\n      if (c < 0x800) {\n        bytes[offset++] = ((c >> 6) & 0x1F) | 0xC0;\n      } else {\n        if (c < 0x10000) {\n          bytes[offset++] = ((c >> 12) & 0x0F) | 0xE0;\n        } else {\n          bytes[offset++] = ((c >> 18) & 0x07) | 0xF0;\n          bytes[offset++] = ((c >> 12) & 0x3F) | 0x80;\n        }\n        bytes[offset++] = ((c >> 6) & 0x3F) | 0x80;\n      }\n      bytes[offset++] = (c & 0x3F) | 0x80;\n    }\n  }\n}\n\nfunction writeByteBuffer(bb: ByteBuffer, buffer: ByteBuffer): void {\n  let offset = grow(bb, buffer.limit);\n  let from = bb.bytes;\n  let to = buffer.bytes;\n\n  // This for loop is much faster than subarray+set on V8\n  for (let i = 0, n = buffer.limit; i < n; i++) {\n    from[i + offset] = to[i];\n  }\n}\n\nfunction readByte(bb: ByteBuffer): number {\n  return bb.bytes[advance(bb, 1)];\n}\n\nfunction writeByte(bb: ByteBuffer, value: number): void {\n  let offset = grow(bb, 1);\n  bb.bytes[offset] = value;\n}\n\nfunction readFloat(bb: ByteBuffer): number {\n  let offset = advance(bb, 4);\n  let bytes = bb.bytes;\n\n  // Manual copying is much faster than subarray+set in V8\n  f32_u8[0] = bytes[offset++];\n  f32_u8[1] = bytes[offset++];\n  f32_u8[2] = bytes[offset++];\n  f32_u8[3] = bytes[offset++];\n  return f32[0];\n}\n\nfunction writeFloat(bb: ByteBuffer, value: number): void {\n  let offset = grow(bb, 4);\n  let bytes = bb.bytes;\n  f32[0] = value;\n\n  // Manual copying is much faster than subarray+set in V8\n  bytes[offset++] = f32_u8[0];\n  bytes[offset++] = f32_u8[1];\n  bytes[offset++] = f32_u8[2];\n  bytes[offset++] = f32_u8[3];\n}\n\nfunction readDouble(bb: ByteBuffer): number {\n  let offset = advance(bb, 8);\n  let bytes = bb.bytes;\n\n  // Manual copying is much faster than subarray+set in V8\n  f64_u8[0] = bytes[offset++];\n  f64_u8[1] = bytes[offset++];\n  f64_u8[2] = bytes[offset++];\n  f64_u8[3] = bytes[offset++];\n  f64_u8[4] = bytes[offset++];\n  f64_u8[5] = bytes[offset++];\n  f64_u8[6] = bytes[offset++];\n  f64_u8[7] = bytes[offset++];\n  return f64[0];\n}\n\nfunction writeDouble(bb: ByteBuffer, value: number): void {\n  let offset = grow(bb, 8);\n  let bytes = bb.bytes;\n  f64[0] = value;\n\n  // Manual copying is much faster than subarray+set in V8\n  bytes[offset++] = f64_u8[0];\n  bytes[offset++] = f64_u8[1];\n  bytes[offset++] = f64_u8[2];\n  bytes[offset++] = f64_u8[3];\n  bytes[offset++] = f64_u8[4];\n  bytes[offset++] = f64_u8[5];\n  bytes[offset++] = f64_u8[6];\n  bytes[offset++] = f64_u8[7];\n}\n\nfunction readInt32(bb: ByteBuffer): number {\n  let offset = advance(bb, 4);\n  let bytes = bb.bytes;\n  return (\n    bytes[offset] |\n    (bytes[offset + 1] << 8) |\n    (bytes[offset + 2] << 16) |\n    (bytes[offset + 3] << 24)\n  );\n}\n\nfunction writeInt32(bb: ByteBuffer, value: number): void {\n  let offset = grow(bb, 4);\n  let bytes = bb.bytes;\n  bytes[offset] = value;\n  bytes[offset + 1] = value >> 8;\n  bytes[offset + 2] = value >> 16;\n  bytes[offset + 3] = value >> 24;\n}\n\nfunction readInt64(bb: ByteBuffer, unsigned: boolean): Long {\n  return {\n    low: readInt32(bb),\n    high: readInt32(bb),\n    unsigned,\n  };\n}\n\nfunction writeInt64(bb: ByteBuffer, value: Long): void {\n  writeInt32(bb, value.low);\n  writeInt32(bb, value.high);\n}\n\nfunction readVarint32(bb: ByteBuffer): number {\n  let c = 0;\n  let value = 0;\n  let b: number;\n  do {\n    b = readByte(bb);\n    if (c < 32) value |= (b & 0x7F) << c;\n    c += 7;\n  } while (b & 0x80);\n  return value;\n}\n\nfunction writeVarint32(bb: ByteBuffer, value: number): void {\n  value >>>= 0;\n  while (value >= 0x80) {\n    writeByte(bb, (value & 0x7f) | 0x80);\n    value >>>= 7;\n  }\n  writeByte(bb, value);\n}\n\nfunction readVarint64(bb: ByteBuffer, unsigned: boolean): Long {\n  let part0 = 0;\n  let part1 = 0;\n  let part2 = 0;\n  let b: number;\n\n  b = readByte(bb); part0 = (b & 0x7F); if (b & 0x80) {\n    b = readByte(bb); part0 |= (b & 0x7F) << 7; if (b & 0x80) {\n      b = readByte(bb); part0 |= (b & 0x7F) << 14; if (b & 0x80) {\n        b = readByte(bb); part0 |= (b & 0x7F) << 21; if (b & 0x80) {\n\n          b = readByte(bb); part1 = (b & 0x7F); if (b & 0x80) {\n            b = readByte(bb); part1 |= (b & 0x7F) << 7; if (b & 0x80) {\n              b = readByte(bb); part1 |= (b & 0x7F) << 14; if (b & 0x80) {\n                b = readByte(bb); part1 |= (b & 0x7F) << 21; if (b & 0x80) {\n\n                  b = readByte(bb); part2 = (b & 0x7F); if (b & 0x80) {\n                    b = readByte(bb); part2 |= (b & 0x7F) << 7;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    low: part0 | (part1 << 28),\n    high: (part1 >>> 4) | (part2 << 24),\n    unsigned,\n  };\n}\n\nfunction writeVarint64(bb: ByteBuffer, value: Long): void {\n  let part0 = value.low >>> 0;\n  let part1 = ((value.low >>> 28) | (value.high << 4)) >>> 0;\n  let part2 = value.high >>> 24;\n\n  // ref: src/google/protobuf/io/coded_stream.cc\n  let size =\n    part2 === 0 ?\n      part1 === 0 ?\n        part0 < 1 << 14 ?\n          part0 < 1 << 7 ? 1 : 2 :\n          part0 < 1 << 21 ? 3 : 4 :\n        part1 < 1 << 14 ?\n          part1 < 1 << 7 ? 5 : 6 :\n          part1 < 1 << 21 ? 7 : 8 :\n      part2 < 1 << 7 ? 9 : 10;\n\n  let offset = grow(bb, size);\n  let bytes = bb.bytes;\n\n  switch (size) {\n    case 10: bytes[offset + 9] = (part2 >>> 7) & 0x01;\n    case 9: bytes[offset + 8] = size !== 9 ? part2 | 0x80 : part2 & 0x7F;\n    case 8: bytes[offset + 7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\n    case 7: bytes[offset + 6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\n    case 6: bytes[offset + 5] = size !== 6 ? (part1 >>> 7) | 0x80 : (part1 >>> 7) & 0x7F;\n    case 5: bytes[offset + 4] = size !== 5 ? part1 | 0x80 : part1 & 0x7F;\n    case 4: bytes[offset + 3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\n    case 3: bytes[offset + 2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\n    case 2: bytes[offset + 1] = size !== 2 ? (part0 >>> 7) | 0x80 : (part0 >>> 7) & 0x7F;\n    case 1: bytes[offset] = size !== 1 ? part0 | 0x80 : part0 & 0x7F;\n  }\n}\n\nfunction readVarint32ZigZag(bb: ByteBuffer): number {\n  let value = readVarint32(bb);\n\n  // ref: src/google/protobuf/wire_format_lite.h\n  return (value >>> 1) ^ -(value & 1);\n}\n\nfunction writeVarint32ZigZag(bb: ByteBuffer, value: number): void {\n  // ref: src/google/protobuf/wire_format_lite.h\n  writeVarint32(bb, (value << 1) ^ (value >> 31));\n}\n\nfunction readVarint64ZigZag(bb: ByteBuffer): Long {\n  let value = readVarint64(bb, /* unsigned */ false);\n  let low = value.low;\n  let high = value.high;\n  let flip = -(low & 1);\n\n  // ref: src/google/protobuf/wire_format_lite.h\n  return {\n    low: ((low >>> 1) | (high << 31)) ^ flip,\n    high: (high >>> 1) ^ flip,\n    unsigned: false,\n  };\n}\n\nfunction writeVarint64ZigZag(bb: ByteBuffer, value: Long): void {\n  let low = value.low;\n  let high = value.high;\n  let flip = high >> 31;\n\n  // ref: src/google/protobuf/wire_format_lite.h\n  writeVarint64(bb, {\n    low: (low << 1) ^ flip,\n    high: ((high << 1) | (low >>> 31)) ^ flip,\n    unsigned: false,\n  });\n}\n"]}