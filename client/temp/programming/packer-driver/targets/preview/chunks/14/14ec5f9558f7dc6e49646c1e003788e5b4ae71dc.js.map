{"version":3,"sources":["file:///E:/code/cocos/zhl/GameFramework/assets/Scrpts/Main.ts"],"names":["_decorator","Component","decodeHead","encodeHead","ccclass","property","Main","start","client","WebSocket","onopen","schedule","head","begin","end","send","onmessage","event","data","reader","FileReader","readAsArrayBuffer","onload","e","buf","Uint8Array","result","ret","console","log","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACPC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,U,iBAAAA,U;;;;;;;;;OACpB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;sBAGjBM,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BL,SAD1B,CACoC;AAChCM,QAAAA,KAAK,GAAG;AAEJ,cAAIC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAb;;AAEAD,UAAAA,MAAM,CAACE,MAAP,GAAgB,MAAI;AAChB,iBAAKC,QAAL,CAAc,MAAI;AACd,kBAAIC,IAAS,GAAG;AACZC,gBAAAA,KAAK,EAAE,CADK;AAEZC,gBAAAA,GAAG,EAAE;AAFO,eAAhB;AAIAN,cAAAA,MAAM,CAACO,IAAP,CAAY;AAAA;AAAA,4CAAWH,IAAX,CAAZ;AACH,aAND,EAMG,CANH;AAOH,WARD;;AAUAJ,UAAAA,MAAM,CAACQ,SAAP,kCAAmB,WAAMC,KAAN,EAAc;AAC7B,gBAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,gBAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,YAAAA,MAAM,CAACE,iBAAP,CAAyBH,IAAzB;;AACAC,YAAAA,MAAM,CAACG,MAAP,GAAgB,UAAUC,CAAV,EAAa;AACzB,kBAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeN,MAAM,CAACO,MAAtB,CAAV;AACA,kBAAIC,GAAQ,GAAG;AAAA;AAAA,4CAAWH,GAAX,CAAf;AACAI,cAAAA,OAAO,CAACC,GAAR,sDAAuBF,GAAG,CAACd,KAA3B,aAAwCc,GAAG,CAACb,GAA5C;AACH,aAJD;AAKH,WATD;AAUH;;AAEDgB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA7B+B,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport {Head, decodeHead, encodeHead} from \"./Untitle\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('Main')\nexport class Main extends Component {\n    start() {\n\n        let client = new WebSocket(\"ws://127.0.0.1:9002\");\n\n        client.onopen = ()=>{\n            this.schedule(()=>{\n                let head:Head = {\n                    begin: 1,\n                    end: 2\n                };\n                client.send(encodeHead(head));\n            }, 1);\n        };\n\n        client.onmessage = async(event)=>{\n            let data = event.data;\n            var reader = new FileReader();\n            reader.readAsArrayBuffer(data);\n            reader.onload = function (e) {\n                var buf = new Uint8Array(reader.result as Uint8Array);\n                let ret:Head = decodeHead(buf);\n                console.log(`从服务端接收消息${ret.begin} === ${ret.end}`);\n            }\n        };\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}